---
import Seo from "../components/Seo.astro";
import { Image } from "astro:assets";
import imgimages_gaiac_hero_cloud_webp from "../../public/images/gaiac_hero_cloud.webp";
import imgimages_reseau_affaires_entreprises_durables_webp from "../../public/images/reseau-affaires-entreprises-durables.webp";
import '../styles/global.css';
---

<html lang="en">
	<head>
		
        <script>
        import { showToast } from "../components/toast";
        (() => {
          const els = [...document.querySelectorAll('form')];
          if (!els?.length) return;
          els.forEach(el => {
            el.addEventListener('submit', async (e) => {
              e.preventDefault();
              const formData = new FormData(e.target);
              const formObject = Object.fromEntries(formData);
              formObject.emailUser = "quangnhat249@gmail.com";
              try {
                const response = await fetch('undefined/api/send-mail-contact', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(formObject)
                });
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                const result = await response.json();
                showToast('Form submitted successfully!');
              } catch (error) {
                console.error('Error submitting form:', error);
                showToast('Error submitting form', 'error');
              }
            });
          });
        })();
      </script>
      <script>
      class LazyLoad extends HTMLElement {
        constructor() {
          super();
          class HeadlessDetect {
            allTestFunctions = [
              "testUserAgent",
              "testChromeWindow",
              "testPlugins",
              "testAppVersion",
              "testConnectionRtt",
            ];

            constructor() {}

            testUserAgent() {
              if (/Headless/.test(window.navigator.userAgent)) {
                return 1;
              } else {
                return 0;
              }
            }

            testChromeWindow() {
              // @ts-ignore
              if (eval.toString().length == 33 && !window.chrome) {
                return 1;
              } else {
                return 0;
              }
            }

            testNotificationPermissions(callback) {
              navigator.permissions
                .query({ name: "notifications" })
                .then(function (permissionStatus) {
                  if (
                    Notification.permission === "denied" &&
                    permissionStatus.state === "prompt"
                  ) {
                    // Headless
                    callback(1);
                  } else {
                    // Not Headless
                    callback(0);
                  }
                });
            }

            testPlugins() {
              let length = navigator.plugins.length;

              return length === 0 ? 1 : 0;
            }

            testAppVersion() {
              let appVersion = navigator.appVersion;

              return /headless/i.test(appVersion) ? 1 : 0;
            }

            // Connection Rtt
            testConnectionRtt() {
              // @ts-ignore
              let connection = navigator.connection;
              let connectionRtt = connection ? connection.rtt : undefined;

              if (connectionRtt === undefined) {
                return 0;
              } else {
                return connectionRtt === 0 ? 1 : 0;
              }
            }

            getHeadlessScore() {
              let score = 0;
              let testsRun = 0;

              this.testNotificationPermissions(function (v) {
                score += v;
                testsRun++;
              });

              for (let i = 0; i < this.allTestFunctions.length; i++) {
                score += this[this.allTestFunctions[i]].apply();
                testsRun++;
              }

              return score / testsRun;
            }
          }
          const headlessDetector = new HeadlessDetect();
          if (headlessDetector.getHeadlessScore() > 0.25) {
            while (this.firstChild) {
              this.removeChild(this.firstChild);
            }
          }
        }
      }

      customElements.define("lazy-load", LazyLoad);
    </script>
        <Seo seo={{ title: "EcoBuilder", description: "Page description", keywords: "", canonical: "", image: '', type: "website", themeColor: "#ffffff"}} />
		<meta charset="utf-8" />
		<link rel="icon" type="image/x-icon" href=/favicons/1738827346299_favicon.ico /> 
		<!-- <link
			rel="icon"
			type="image/svg+xml"
			href="/favicon.svg"
		/> -->
		<meta
			name="viewport"
			content="width=device-width"
		/>
		<meta
			name="generator"
			content={Astro.generator}
		/>
		<title>Astro</title>
	</head>
	<body> <header class="flex flex-col relative shrink-0 box-border h-auto empty:min-h-[30vh] before:content-[&#x27;Header&#x27;] before:absolute before:top-0 before:left-0 before:inline-block before:py-1 before:px-2 before:bg-black/20 before:text-white before:text-sm before:rounded before:!rounded-tl-none before:!rounded-bl-none mb-[1px] header-section"></header><main class="flex flex-col relative shrink-0 box-border h-auto empty:min-h-[30vh] before:content-[&#x27;Main&#x27;] before:absolute before:top-0 before:left-0 before:inline-block before:py-1 before:px-2 before:bg-black/20 before:text-white before:text-sm before:rounded before:!rounded-tl-none before:!rounded-bl-none mb-[1px] main-section"><section class="main-component flex overflow-hidden flex-col text-white bg-[#0F2D2E]" aria-label="Hero Gaiact Section"><div class="py-10 block relative" aria-label="Wrapper for Hero Gaiact Section"><div class="absolute -top-10 flex justify-end right-0 lg:top-[36px]" aria-label="Container for Hero Gaiact Image" style="z-index:3"><Image alt="Business network illustration" src={imgimages_gaiac_hero_cloud_webp} width="401" height="203" class=" z-3 w-[235px] lg:w-[401px] md:w-[345px]" cssImageWrapper="lg:mx-0 lg:w-full" cssResizer="!flex-shrink z-3" aria-label="Illustration for business network" /></div><div class="max-w-screen-2xl block lg:flex items-center mx-auto" aria-label="Container for Hero Gaiact Section"><section class="px-4 sm:px-6 lg:px-8 max-md:px-5 max-md:max-w-full flex flex-col items-start gap-10 max-w-full lg:w-[791px] max-md:w-full max-md:min-h-0 max-sm:w-full relative z-20" aria-label="Content Section of Hero Gaiact"><h1 width="728px" height="393px" class="self-stretch lg:text-[56px] font-bold max-md:max-w-full text-[32px] leading-normal lg:leading-tight text-white lg:w-[728px] lg:h-[393px]" aria-label="Main heading of Hero Gaiact Section">Le réseau d&#x27;affaires pour les entreprises engagées (ou presque) dans le développement durable</h1><p width="741px" height="246px" class="text-white self-stretch text-2xl leading-10 max-md:max-w-full max-sm:text-xl max-sm:leading-8 lg:w-[741px] lg:h-[246px]" aria-label="Description of Hero Gaiact Section">Connectez-vous avec des entreprises engagées, découvrez des opportunités de collaboration et boostez votre impact écologique et social.</p><button width="auto" height="auto" class="w-fit gap-2.5 self-stretch px-12 py-2.5 text-xl leading-snug bg-[#AEC90C] rounded-xl text-[#042f2e] max-sm:py-2 max-sm:text-lg font-semibold" aria-label="Button to join Hero Gaiact network">Nous rejoindre</button></section><div class="lg:max-w-[715px] lg:min-w-[715px] lg:h-[calc(100%_-_80px)] w-full relative lg:absolute right-0 flex justify-center lg:justify-end z-0" aria-label="Image container for Hero Gaiact Section"><Image alt="Business network illustration" src={imgimages_reseau_affaires_entreprises_durables_webp} width="665" height="487" class="lg:w-[661px] h-auto w-full lg:h-full z-0" cssImageWrapper="lg:w-full" cssResizer="!flex-shrink" aria-label="Illustration for business network" /></div></div></div></section></main><lazy-load><footer></footer></lazy-load> </body>
</html>
